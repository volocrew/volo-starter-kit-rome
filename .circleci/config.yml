# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
# Sample https://gist.github.com/mariuslazar93/beefd809071015cff3689648185c8fa0
#
version: 2
jobs:
  build:
    docker:
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/node:12.14.0

    working_directory: ~/project

    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
        # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      # Lint the source code
      - run:
          name: Linting
          command: npm run lint

      #   Test the source code
      #   - run:
      #       name: Testing
      #       command: npm run test

      # Build project with different configuration based on
      # the current branch
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
                npm run build
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run build:prod
            else
                npm run build:prod                      
            fi
      # - run:
      #     name: Build AWS prod resources
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #           npm run build:aws:prod
      #       fi
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  # The deploy job
  deploy:
    working_directory: ~/project
    docker:
      - image: circleci/node:12-browsers
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      # Install AWS cli
      - run:
          name: Install aws cli
          command: sudo apt-get -y -qq install awscli
      # Install version deployment
      - run:
          name: Install version production deps
          command: npm i chalk replace-in-file @elastic/elasticsearch
      # Install SLS
      - run:
          name: Install sls
          command: npm install serverless serverless-appsync-plugin@1.4.0 serverless-step-functions@2.26.0

      # Set the signature version for the S3 auth
      - run:
          name: Setting Signature Version 4 for S3 Request Authentication
          command: aws configure set default.s3.signature_version s3v4
      # Deploy to the S3 bucket corresponding to the current branch
      - run:
          name: version deployment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm run version:prod
            fi
      - run:
          name: list dist
          command: ls dist
      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                aws --region us-east-1 s3 sync dist s3://www.enigmaglass.com/ --delete
            fi
      - run:
          name: Build AWS prod resources
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run build:aws:prod
            fi
      - run:
          name: Deploy AWS prod resources
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run deploy:aws:prod
            fi

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build
      # The deploy job will only run on the filtered branches and
      # require the build job to be successful before it starts
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                # - feat/test
